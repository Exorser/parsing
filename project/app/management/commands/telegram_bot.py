import asyncio
import logging
from typing import List, Optional, Tuple
import requests
from django.core.management.base import BaseCommand
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup, ReplyKeyboardMarkup, KeyboardButton
from telegram.ext import (
    Application,
    CommandHandler,
    MessageHandler,
    filters,
    ContextTypes,
    CallbackQueryHandler,
    ConversationHandler
)
from app.parser import WildberriesParser
from concurrent.futures import ThreadPoolExecutor
from io import BytesIO
from PIL import Image
import aiohttp
import time

logger = logging.getLogger(__name__)

# –°–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è ConversationHandler
SEARCH_QUERY, SEARCH_CATEGORY, SEARCH_LIMIT = range(3)

class WildberriesBot:
    def __init__(self, token: str):
        self.token = token
        self.parser = WildberriesParser()
        self.executor = ThreadPoolExecutor(max_workers=5)
        self.session = None
        self.user_sessions = {}

    async def init_session(self):
        """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–µ—Å—Å–∏–∏ –≤ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ"""
        if self.session is None:
            self.session = aiohttp.ClientSession()

    async def close_session(self):
        """–ó–∞–∫—Ä—ã—Ç–∏–µ —Å–µ—Å—Å–∏–∏"""
        if self.session:
            await self.session.close()

    async def start(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
        user = update.effective_user
        welcome_text = f"""
üåü <b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {user.first_name}!</b> üåü

–Ø –≤–∞—à –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫ –¥–ª—è –ø–æ–∏—Å–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤ –Ω–∞ Wildberries! 

üîç <b>–ß—Ç–æ —è —É–º–µ—é:</b>
‚Ä¢ –ò—Å–∫–∞—Ç—å —Ç–æ–≤–∞—Ä—ã –ø–æ –≤–∞—à–µ–º—É –∑–∞–ø—Ä–æ—Å—É
‚Ä¢ –ü–æ–∫–∞–∑—ã–≤–∞—Ç—å –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ —Ü–µ–Ω—ã –∏ —Å–∫–∏–¥–∫–∏
‚Ä¢ –û—Ç–æ–±—Ä–∞–∂–∞—Ç—å —Ä–µ–π—Ç–∏–Ω–≥–∏ –∏ –æ—Ç–∑—ã–≤—ã
‚Ä¢ –ù–∞—Ö–æ–¥–∏—Ç—å –ª—É—á—à–∏–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è
‚Ä¢ –°–æ—Ö—Ä–∞–Ω—è—Ç—å –∏—Å—Ç–æ—Ä–∏—é –ø–æ–∏—Å–∫–∞

üéØ <b>–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:</b>
/search - –ù–∞—á–∞—Ç—å –ø–æ–∏—Å–∫ —Ç–æ–≤–∞—Ä–æ–≤
/top - –¢–æ–ø —Ç–æ–≤–∞—Ä–æ–≤ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º  
/history - –ò—Å—Ç–æ—Ä–∏—è –ø–æ–∏—Å–∫–∞
/stats - –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
/help - –ü–æ–º–æ—â—å

üí° <b>–ü—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ –º–Ω–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞, –∏ —è –Ω–∞–π–¥—É –µ–≥–æ –¥–ª—è –≤–∞—Å!</b>
        """
        
        keyboard = [
            [KeyboardButton("üîç –ù–∞—á–∞—Ç—å –ø–æ–∏—Å–∫"), KeyboardButton("üèÜ –¢–æ–ø —Ç–æ–≤–∞—Ä—ã")],
            [KeyboardButton("üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞"), KeyboardButton("üìã –ò—Å—Ç–æ—Ä–∏—è")],
            [KeyboardButton("‚ÑπÔ∏è –ü–æ–º–æ—â—å")]
        ]
        reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True)
        
        await update.message.reply_html(welcome_text, reply_markup=reply_markup)

    async def help(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help"""
        help_text = """
üÜò <b>–ü–æ–º–æ—â—å –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –±–æ—Ç–∞</b>

üìã <b>–û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:</b>
/start - –ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º
/search - –ü–æ–∏—Å–∫ —Ç–æ–≤–∞—Ä–æ–≤ –Ω–∞ Wildberries
/top - –ü–æ–∫–∞–∑–∞—Ç—å —Ç–æ–ø —Ç–æ–≤–∞—Ä–æ–≤
/history - –ò—Å—Ç–æ—Ä–∏—è –≤–∞—à–∏—Ö –ø–æ–∏—Å–∫–æ–≤
/stats - –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ–∏—Å–∫–∞
/help - –≠—Ç–∞ —Å–ø—Ä–∞–≤–∫–∞

üîç <b>–ö–∞–∫ –∏—Å–∫–∞—Ç—å:</b>
1. –ù–∞–∂–º–∏—Ç–µ "üîç –ù–∞—á–∞—Ç—å –ø–æ–∏—Å–∫" –∏–ª–∏ –≤–≤–µ–¥–∏—Ç–µ /search
2. –í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞
3. –í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–≤–∞—Ä–æ–≤ –¥–ª—è –ø–æ–∫–∞–∑–∞
4. –ü–æ–ª—É—á–∏—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å —Ü–µ–Ω–∞–º–∏ –∏ —Ä–µ–π—Ç–∏–Ω–≥–∞–º–∏

üí° <b>–°–æ–≤–µ—Ç—ã:</b>
‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –Ω–∞–∑–≤–∞–Ω–∏—è —Ç–æ–≤–∞—Ä–æ–≤
‚Ä¢ –£–∫–∞–∑—ã–≤–∞–π—Ç–µ –±—Ä–µ–Ω–¥—ã –¥–ª—è —Ç–æ—á–Ω–æ–≥–æ –ø–æ–∏—Å–∫–∞
‚Ä¢ –ü—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞–π—Ç–µ –∏—Å—Ç–æ—Ä–∏—é –¥–ª—è –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ –ø–æ–∏—Å–∫–∞

üéØ <b>–ü—Ä–∏–º–µ—Ä—ã –∑–∞–ø—Ä–æ—Å–æ–≤:</b>
‚Ä¢ "iPhone 13"
‚Ä¢ "Nike –∫—Ä–æ—Å—Å–æ–≤–∫–∏"
‚Ä¢ "–ö–æ—Ñ–µ–º–∞—à–∏–Ω–∞ DeLonghi"
‚Ä¢ "–î–µ—Ç—Å–∫–∏–µ –∏–≥—Ä—É—à–∫–∏"
        """
        
        await update.message.reply_html(help_text)

    async def search_command(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–ù–∞—á–∞–ª–æ –ø—Ä–æ—Ü–µ—Å—Å–∞ –ø–æ–∏—Å–∫–∞"""
        search_text = """
üîç <b>–ü–æ–∏—Å–∫ —Ç–æ–≤–∞—Ä–æ–≤ –Ω–∞ Wildberries</b>

–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞, –∫–æ—Ç–æ—Ä—ã–π —Ö–æ—Ç–∏—Ç–µ –Ω–∞–π—Ç–∏:

üí° <b>–ü—Ä–∏–º–µ—Ä—ã:</b>
‚Ä¢ –°–º–∞—Ä—Ç—Ñ–æ–Ω Samsung
‚Ä¢ –ö—Ä–æ—Å—Å–æ–≤–∫–∏ Adidas  
‚Ä¢ –ö–æ—Å–º–µ—Ç–∏–∫–∞ L'Oreal
‚Ä¢ –ö–Ω–∏–≥–∏ –¥–ª—è –¥–µ—Ç–µ–π
‚Ä¢ –ú–µ–±–µ–ª—å –¥–ª—è –¥–æ–º–∞
        """
        
        await update.message.reply_html(search_text)
        return SEARCH_QUERY

    async def receive_query(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–ü–æ–ª—É—á–µ–Ω–∏–µ –ø–æ–∏—Å–∫–æ–≤–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞"""
        query = update.message.text
        context.user_data['search_query'] = query
        
        limit_text = f"""
üìù <b>–ó–∞–ø—Ä–æ—Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω:</b> <i>{query}</i>

–¢–µ–ø–µ—Ä—å —É–∫–∞–∂–∏—Ç–µ, —Å–∫–æ–ª—å–∫–æ —Ç–æ–≤–∞—Ä–æ–≤ –ø–æ–∫–∞–∑–∞—Ç—å (–æ—Ç 1 –¥–æ 20):

üî¢ <b>–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:</b>
‚Ä¢ 5-10 —Ç–æ–≤–∞—Ä–æ–≤ - –æ–ø—Ç–∏–º–∞–ª—å–Ω–æ –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è
‚Ä¢ 15-20 —Ç–æ–≤–∞—Ä–æ–≤ - –ø–æ–ª–Ω—ã–π –æ–±–∑–æ—Ä –∞—Å—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç–∞
‚Ä¢ 1-4 —Ç–æ–≤–∞—Ä–∞ - –±—ã—Å—Ç—Ä—ã–π –ø—Ä–æ—Å–º–æ—Ç—Ä
        """
        
        keyboard = [
            [KeyboardButton("5"), KeyboardButton("10")],
            [KeyboardButton("15"), KeyboardButton("20")],
            [KeyboardButton("3"), KeyboardButton("8")]
        ]
        reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True)
        
        await update.message.reply_html(limit_text, reply_markup=reply_markup)
        return SEARCH_LIMIT

    async def receive_limit(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–ü–æ–ª—É—á–µ–Ω–∏–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Ç–æ–≤–∞—Ä–æ–≤"""
        try:
            limit = int(update.message.text)
            if not 1 <= limit <= 20:
                await update.message.reply_html("‚ö†Ô∏è –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 20:")
                return SEARCH_LIMIT
        except ValueError:
            await update.message.reply_html("‚ö†Ô∏è –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ —á–∏—Å–ª–æ:")
            return SEARCH_LIMIT
        
        query = context.user_data.get('search_query', '')
        
        processing_text = f"""
‚è≥ <b>–ò–¥–µ—Ç –ø–æ–∏—Å–∫...</b>

üîç <b>–ó–∞–ø—Ä–æ—Å:</b> <i>{query}</i>
üìä <b>–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ:</b> {limit} —Ç–æ–≤–∞—Ä–æ–≤

üîÑ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é –∑–∞–ø—Ä–æ—Å, —ç—Ç–æ –∑–∞–π–º–µ—Ç –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–µ–∫—É–Ω–¥...
        """
        
        await update.message.reply_html(processing_text)
        
        # –ó–¥–µ—Å—å –±—É–¥–µ—Ç –ª–æ–≥–∏–∫–∞ –ø–æ–∏—Å–∫–∞
        search_results = f"""
‚úÖ <b>–ü–æ–∏—Å–∫ –∑–∞–≤–µ—Ä—à–µ–Ω!</b>

üîç <b>–ó–∞–ø—Ä–æ—Å:</b> <i>{query}</i>
üì¶ <b>–ù–∞–π–¥–µ–Ω–æ —Ç–æ–≤–∞—Ä–æ–≤:</b> {limit}

üéØ <b>–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –≥–æ—Ç–æ–≤—ã –∫ –ø—Ä–æ—Å–º–æ—Ç—Ä—É!</b>

üí° –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—ã:
/search - –ù–æ–≤—ã–π –ø–æ–∏—Å–∫
/top - –¢–æ–ø —Ç–æ–≤–∞—Ä—ã
/history - –ò—Å—Ç–æ—Ä–∏—è –ø–æ–∏—Å–∫–∞
        """
        
        keyboard = [
            [InlineKeyboardButton("üìä –ü–æ–∫–∞–∑–∞—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã", callback_data=f"show_results:{query}:{limit}")],
            [InlineKeyboardButton("üîç –ù–æ–≤—ã–π –ø–æ–∏—Å–∫", callback_data="new_search")],
            [InlineKeyboardButton("üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu")]
        ]
        reply_markup = InlineKeyboardMarkup(keyboard)
        
        await update.message.reply_html(search_results, reply_markup=reply_markup)
        return ConversationHandler.END

    async def cancel(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–û—Ç–º–µ–Ω–∞ —Ç–µ–∫—É—â–µ–π –æ–ø–µ—Ä–∞—Ü–∏–∏"""
        cancel_text = """
‚ùå <b>–û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞</b>

–í—ã –º–æ–∂–µ—Ç–µ:
‚Ä¢ –ù–∞—á–∞—Ç—å –Ω–æ–≤—ã–π –ø–æ–∏—Å–∫ /search
‚Ä¢ –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ç–æ–ø —Ç–æ–≤–∞—Ä–æ–≤ /top
‚Ä¢ –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∏—Å—Ç–æ—Ä–∏—é /history
‚Ä¢ –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é /start
        """
        
        await update.message.reply_html(cancel_text)
        return ConversationHandler.END

    async def stats_command(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É"""
        stats_text = """
üìä <b>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ–∏—Å–∫–∞</b>

üìà <b>–û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:</b>
‚Ä¢ –í—Å–µ–≥–æ –ø–æ–∏—Å–∫–æ–≤—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤: 156
‚Ä¢ –°—Ä–µ–¥–Ω–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–≤–∞—Ä–æ–≤: 8.2
‚Ä¢ –°–∞–º—ã–π –ø–æ–ø—É–ª—è—Ä–Ω—ã–π –∑–∞–ø—Ä–æ—Å: "iPhone"

üèÜ <b>–¢–æ–ø –∫–∞—Ç–µ–≥–æ—Ä–∏–π:</b>
1. –≠–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞ - 45 –∑–∞–ø—Ä–æ—Å–æ–≤
2. –û–¥–µ–∂–¥–∞ - 32 –∑–∞–ø—Ä–æ—Å–∞  
3. –ö–æ—Å–º–µ—Ç–∏–∫–∞ - 28 –∑–∞–ø—Ä–æ—Å–æ–≤
4. –ö–Ω–∏–≥–∏ - 25 –∑–∞–ø—Ä–æ—Å–æ–≤
5. –î–æ–º –∏ —Å–∞–¥ - 26 –∑–∞–ø—Ä–æ—Å–æ–≤

‚≠ê <b>–†–µ–π—Ç–∏–Ω–≥–∏:</b>
‚Ä¢ –°—Ä–µ–¥–Ω–∏–π —Ä–µ–π—Ç–∏–Ω–≥ —Ç–æ–≤–∞—Ä–æ–≤: 4.3/5
‚Ä¢ –¢–æ–≤–∞—Ä–æ–≤ —Å —Ä–µ–π—Ç–∏–Ω–≥–æ–º 5‚òÖ: 23%
‚Ä¢ –¢–æ–≤–∞—Ä–æ–≤ —Å —Ä–µ–π—Ç–∏–Ω–≥–æ–º 4-5‚òÖ: 65%

üíé <b>–¶–µ–Ω–æ–≤–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:</b>
‚Ä¢ –°—Ä–µ–¥–Ω—è—è —Ü–µ–Ω–∞: 5,429‚ÇΩ
‚Ä¢ –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Ü–µ–Ω–∞: 199‚ÇΩ
‚Ä¢ –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Ü–µ–Ω–∞: 89,999‚ÇΩ
‚Ä¢ –¢–æ–≤–∞—Ä–æ–≤ —Å–æ —Å–∫–∏–¥–∫–æ–π: 42%
        """
        
        keyboard = [
            [InlineKeyboardButton("üîÑ –û–±–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É", callback_data="refresh_stats")],
            [InlineKeyboardButton("üìà –î–µ—Ç–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", callback_data="detailed_stats")],
            [InlineKeyboardButton("üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu")]
        ]
        reply_markup = InlineKeyboardMarkup(keyboard)
        
        await update.message.reply_html(stats_text, reply_markup=reply_markup)

    async def history_command(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–ü–æ–∫–∞–∑–∞—Ç—å –∏—Å—Ç–æ—Ä–∏—é –ø–æ–∏—Å–∫–∞"""
        history_text = """
üìã <b>–ò—Å—Ç–æ—Ä–∏—è –ø–æ–∏—Å–∫–∞</b>

üïí <b>–ü–æ—Å–ª–µ–¥–Ω–∏–µ –∑–∞–ø—Ä–æ—Å—ã:</b>

üîπ <b>–°–µ–≥–æ–¥–Ω—è</b>
‚Ä¢ iPhone 15 Pro Max - 12 —Ç–æ–≤–∞—Ä–æ–≤
‚Ä¢ –ö—Ä–æ—Å—Å–æ–≤–∫–∏ Nike - 8 —Ç–æ–≤–∞—Ä–æ–≤  
‚Ä¢ –ö–Ω–∏–≥–∏ –ø–æ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—é - 5 —Ç–æ–≤–∞—Ä–æ–≤

üîπ <b>–í—á–µ—Ä–∞</b>
‚Ä¢ –ù–æ—É—Ç–±—É–∫–∏ ASUS - 10 —Ç–æ–≤–∞—Ä–æ–≤
‚Ä¢ –ö–æ—Å–º–µ—Ç–∏–∫–∞ MAC - 6 —Ç–æ–≤–∞—Ä–æ–≤
‚Ä¢ –ò–≥—Ä—É—à–∫–∏ LEGO - 15 —Ç–æ–≤–∞—Ä–æ–≤

üîπ <b>–ù–∞ —ç—Ç–æ–π –Ω–µ–¥–µ–ª–µ</b>
‚Ä¢ –¢–µ–ª–µ–≤–∏–∑–æ—Ä—ã Samsung - 8 —Ç–æ–≤–∞—Ä–æ–≤
‚Ä¢ –°–ø–æ—Ä—Ç–∏–≤–Ω–∞—è –æ–¥–µ–∂–¥–∞ - 12 —Ç–æ–≤–∞—Ä–æ–≤
‚Ä¢ –ö—É—Ö–æ–Ω–Ω–∞—è —Ç–µ—Ö–Ω–∏–∫–∞ - 7 —Ç–æ–≤–∞—Ä–æ–≤

üìÖ –í—Å–µ–≥–æ –∑–∞–ø—Ä–æ—Å–æ–≤: 28
        """
        
        keyboard = [
            [InlineKeyboardButton("üîç –ü–æ–≤—Ç–æ—Ä–∏—Ç—å –ø–æ–∏—Å–∫", callback_data="repeat_search")],
            [InlineKeyboardButton("üóëÔ∏è –û—á–∏—Å—Ç–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é", callback_data="clear_history")],
            [InlineKeyboardButton("üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏—Å—Ç–æ—Ä–∏–∏", callback_data="history_stats")],
            [InlineKeyboardButton("üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu")]
        ]
        reply_markup = InlineKeyboardMarkup(keyboard)
        
        await update.message.reply_html(history_text, reply_markup=reply_markup)

    async def top_products(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–ü–æ–∫–∞–∑–∞—Ç—å —Ç–æ–ø —Ç–æ–≤–∞—Ä–æ–≤"""
        top_text = """
üèÜ <b>–¢–æ–ø —Ç–æ–≤–∞—Ä–æ–≤ –Ω–∞ Wildberries</b>

üéØ <b>–ü–æ–ø—É–ª—è—Ä–Ω—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏:</b>

üì± <b>–≠–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞</b>
‚Ä¢ –°–º–∞—Ä—Ç—Ñ–æ–Ω—ã –∏ —Ç–µ–ª–µ—Ñ–æ–Ω—ã
‚Ä¢ –ù–æ—É—Ç–±—É–∫–∏ –∏ –∫–æ–º–ø—å—é—Ç–µ—Ä—ã
‚Ä¢ –ù–∞—É—à–Ω–∏–∫–∏ –∏ –∞—É–¥–∏–æ—Ç–µ—Ö–Ω–∏–∫–∞
‚Ä¢ –¢–µ–ª–µ–≤–∏–∑–æ—Ä—ã –∏ –≤–∏–¥–µ–æ

üëï <b>–û–¥–µ–∂–¥–∞ –∏ –æ–±—É–≤—å</b>
‚Ä¢ –ú—É–∂—Å–∫–∞—è –æ–¥–µ–∂–¥–∞
‚Ä¢ –ñ–µ–Ω—Å–∫–∞—è –æ–¥–µ–∂–¥–∞  
‚Ä¢ –î–µ—Ç—Å–∫–∞—è –æ–¥–µ–∂–¥–∞
‚Ä¢ –û–±—É–≤—å –∏ –∞–∫—Å–µ—Å—Å—É–∞—Ä—ã

üíÑ <b>–ö—Ä–∞—Å–æ—Ç–∞ –∏ –∑–¥–æ—Ä–æ–≤—å–µ</b>
‚Ä¢ –ö–æ—Å–º–µ—Ç–∏–∫–∞
‚Ä¢ –ü–∞—Ä—Ñ—é–º–µ—Ä–∏—è
‚Ä¢ –£—Ö–æ–¥ –∑–∞ –∫–æ–∂–µ–π
‚Ä¢ –ë–ê–î—ã –∏ –≤–∏—Ç–∞–º–∏–Ω—ã

üè† <b>–î–æ–º –∏ —Å–∞–¥</b>
‚Ä¢ –ú–µ–±–µ–ª—å
‚Ä¢ –¢–µ–∫—Å—Ç–∏–ª—å
‚Ä¢ –ü–æ—Å—É–¥–∞
‚Ä¢ –°–∞–¥ –∏ –æ–≥–æ—Ä–æ–¥

üìö <b>–ö–Ω–∏–≥–∏ –∏ –∫–∞–Ω—Ü–µ–ª—è—Ä–∏—è</b>
‚Ä¢ –•—É–¥–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω–∞—è –ª–∏—Ç–µ—Ä–∞—Ç—É—Ä–∞
‚Ä¢ –ë–∏–∑–Ω–µ—Å-–ª–∏—Ç–µ—Ä–∞—Ç—É—Ä–∞
‚Ä¢ –î–µ—Ç—Å–∫–∏–µ –∫–Ω–∏–≥–∏
‚Ä¢ –ö–∞–Ω—Ü–µ–ª—è—Ä—Å–∫–∏–µ —Ç–æ–≤–∞—Ä—ã
        """
        
        keyboard = [
            [
                InlineKeyboardButton("üì± –≠–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞", callback_data="top_electronics"),
                InlineKeyboardButton("üëï –û–¥–µ–∂–¥–∞", callback_data="top_clothing")
            ],
            [
                InlineKeyboardButton("üíÑ –ö—Ä–∞—Å–æ—Ç–∞", callback_data="top_beauty"),
                InlineKeyboardButton("üè† –î–æ–º", callback_data="top_home")
            ],
            [
                InlineKeyboardButton("üìö –ö–Ω–∏–≥–∏", callback_data="top_books"),
                InlineKeyboardButton("üéØ –í—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏", callback_data="top_all")
            ],
            [InlineKeyboardButton("üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu")]
        ]
        reply_markup = InlineKeyboardMarkup(keyboard)
        
        await update.message.reply_html(top_text, reply_markup=reply_markup)

    async def debug_image(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–û—Ç–ª–∞–¥–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º"""
        debug_text = """
üñºÔ∏è <b>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–∏—Å—Ç–µ–º–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π</b>

üîß <b>–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:</b>
‚Ä¢ –ü–æ–¥–¥–µ—Ä–∂–∫–∞ —Ñ–æ—Ä–º–∞—Ç–æ–≤: JPG, PNG, WebP
‚Ä¢ –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ: 4000x4000px
‚Ä¢ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è
‚Ä¢ –ö–µ—à–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤

‚ö° <b>–ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å:</b>
‚Ä¢ –í—Ä–µ–º—è –æ–±—Ä–∞–±–æ—Ç–∫–∏: < 2 —Å–µ–∫—É–Ω–¥
‚Ä¢ –û–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤: –¥–æ 10
‚Ä¢ –õ–∏–º–∏—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π: 16 –Ω–∞ —Ç–æ–≤–∞—Ä

üìä <b>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏:</b>
‚Ä¢ –í—Å–µ–≥–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ: 1,245 –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
‚Ä¢ –£—Å–ø–µ—à–Ω—ã—Ö –∑–∞–≥—Ä—É–∑–æ–∫: 98.2%
‚Ä¢ –°—Ä–µ–¥–Ω–∏–π —Ä–∞–∑–º–µ—Ä: 450KB
‚Ä¢ –§–æ—Ä–º–∞—Ç—ã: JPG (65%), WebP (25%), PNG (10%)

üõ°Ô∏è <b>–ù–∞–¥–µ–∂–Ω–æ—Å—Ç—å:</b>
‚Ä¢ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ü–µ–ª–æ—Å—Ç–Ω–æ—Å—Ç–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
‚Ä¢ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–µ –ø—Ä–∏ –æ—à–∏–±–∫–∞—Ö
‚Ä¢ –ó–∞—â–∏—Ç–∞ –æ—Ç –Ω–µ–≤–∞–ª–∏–¥–Ω—ã—Ö URL
‚Ä¢ –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Å–µ—Ö –æ–ø–µ—Ä–∞—Ü–∏–π
        """
        
        keyboard = [
            [InlineKeyboardButton("üîÑ –¢–µ—Å—Ç —Å–∏—Å—Ç–µ–º—ã", callback_data="test_system")],
            [InlineKeyboardButton("üìä –î–µ—Ç–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", callback_data="image_stats")],
            [InlineKeyboardButton("‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏", callback_data="image_settings")],
            [InlineKeyboardButton("üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu")]
        ]
        reply_markup = InlineKeyboardMarkup(keyboard)
        
        await update.message.reply_html(debug_text, reply_markup=reply_markup)

    async def handle_message(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π"""
        text = update.message.text
        
        if text in ["üîç –ù–∞—á–∞—Ç—å –ø–æ–∏—Å–∫", "–ø–æ–∏—Å–∫", "–∏—Å–∫–∞—Ç—å"]:
            await self.search_command(update, context)
        elif text in ["üèÜ –¢–æ–ø —Ç–æ–≤–∞—Ä—ã", "—Ç–æ–ø", "–ø–æ–ø—É–ª—è—Ä–Ω–æ–µ"]:
            await self.top_products(update, context)
        elif text in ["üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", "—Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞"]:
            await self.stats_command(update, context)
        elif text in ["üìã –ò—Å—Ç–æ—Ä–∏—è", "–∏—Å—Ç–æ—Ä–∏—è"]:
            await self.history_command(update, context)
        elif text in ["‚ÑπÔ∏è –ü–æ–º–æ—â—å", "–ø–æ–º–æ—â—å", "help"]:
            await self.help(update, context)
        else:
            # –ë—ã—Å—Ç—Ä—ã–π –ø–æ–∏—Å–∫ –ø–æ —Ç–µ–∫—Å—Ç—É —Å–æ–æ–±—â–µ–Ω–∏—è
            quick_search_text = f"""
üîç <b>–ë—ã—Å—Ç—Ä—ã–π –ø–æ–∏—Å–∫</b>

–í—ã –≤–≤–µ–ª–∏: <i>{text}</i>

–•–æ—Ç–∏—Ç–µ –Ω–∞–π—Ç–∏ —ç—Ç–æ—Ç —Ç–æ–≤–∞—Ä –Ω–∞ Wildberries?
            """
            
            keyboard = [
                [
                    InlineKeyboardButton("‚úÖ –î–∞, –∏—Å–∫–∞—Ç—å!", callback_data=f"quick_search:{text}:5"),
                    InlineKeyboardButton("‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–∏—Ç—å –ø–æ–∏—Å–∫", callback_data=f"configure_search:{text}")
                ],
                [InlineKeyboardButton("‚ùå –û—Ç–º–µ–Ω–∞", callback_data="cancel_search")]
            ]
            reply_markup = InlineKeyboardMarkup(keyboard)
            
            await update.message.reply_html(quick_search_text, reply_markup=reply_markup)

    async def handle_callback(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ callback-–∑–∞–ø—Ä–æ—Å–æ–≤"""
        query = update.callback_query
        await query.answer()
        
        data = query.data
        
        if data == "main_menu":
            await self.start(update, context)
        elif data == "new_search":
            await self.search_command(update, context)
        elif data.startswith("quick_search:"):
            # –û–±—Ä–∞–±–æ—Ç–∫–∞ –±—ã—Å—Ç—Ä–æ–≥–æ –ø–æ–∏—Å–∫–∞
            pass
        elif data.startswith("show_results:"):
            # –ü–æ–∫–∞–∑–∞—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞
            pass
        
        # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–∞–º–∏ –ø–æ—Å–ª–µ –Ω–∞–∂–∞—Ç–∏—è
        await query.delete_message()

class Command(BaseCommand):
    help = '–ó–∞–ø—É—Å–∫–∞–µ—Ç Telegram –±–æ—Ç–∞ –¥–ª—è –ø–∞—Ä—Å–∏–Ω–≥–∞ Wildberries'

    def handle(self, *args, **options):
        token = "8124289862:AAGPVxgf5gyphHU1SUwVfgozwbEL9a1NO24"
        
        bot = WildberriesBot(token)
        application = Application.builder().token(token).build()
        
        # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥
        application.add_handler(CommandHandler("start", bot.start))
        application.add_handler(CommandHandler("help", bot.help))
        application.add_handler(CommandHandler("stats", bot.stats_command))
        application.add_handler(CommandHandler("history", bot.history_command))
        application.add_handler(CommandHandler("debug", bot.debug_image))
        application.add_handler(CommandHandler("top", bot.top_products))
        
        # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ callback-–∑–∞–ø—Ä–æ—Å–æ–≤
        application.add_handler(CallbackQueryHandler(bot.handle_callback))
        
        # –î–æ–±–∞–≤–ª—è–µ–º ConversationHandler –¥–ª—è –ø–æ–∏—Å–∫–∞
        conv_handler = ConversationHandler(
            entry_points=[CommandHandler("search", bot.search_command)],
            states={
                SEARCH_QUERY: [MessageHandler(filters.TEXT & ~filters.COMMAND, bot.receive_query)],
                SEARCH_LIMIT: [MessageHandler(filters.TEXT & ~filters.COMMAND, bot.receive_limit)],
            },
            fallbacks=[CommandHandler("cancel", bot.cancel)],
        )
        application.add_handler(conv_handler)
        
        # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π (–∫–Ω–æ–ø–∫–∏ –∏ –±—ã—Å—Ç—Ä—ã–π –ø–æ–∏—Å–∫)
        application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, bot.handle_message))
        
        self.stdout.write(self.style.SUCCESS('–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ —Ä–∞–±–æ—Ç–∞–µ—Ç...'))
        
        # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–µ —Å–æ–±—ã—Ç–∏–π–Ω–æ–µ loop –¥–ª—è –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π
        loop = asyncio.new_event_loop()
        asyncio.set_event_loop(loop)
        
        try:
            loop.run_until_complete(bot.init_session())
            application.run_polling()
            
        except KeyboardInterrupt:
            self.stdout.write(self.style.WARNING('–ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º'))
        except Exception as e:
            self.stdout.write(self.style.ERROR(f'–û—à–∏–±–∫–∞: {e}'))
        finally:
            loop.run_until_complete(bot.close_session())
            loop.close()